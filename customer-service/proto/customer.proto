syntax = "proto3";

package customerPb;

option go_package="github.com/Kiyosh31/e-commerce-microservice/customer/proto/customerPb";

import "google/api/annotations.proto";

service CustomerService {
  // ------------------ User ------------------ //
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/api/user"
      body: "*"
    };
  }
  rpc SigninUser(SigninUserRequest) returns (SigninUserResponse) {
    option (google.api.http) = {
      post: "/api/user/signin"
      body: "*"
    };
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/user/{userId}"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/api/user/{userId}"
      body: "*"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/api/user/{userId}"
    };
  }

  // ------------------ Seller ------------------ //
  rpc CreateSeller(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/api/user/seller"
      body: "*"
    };
  }
  rpc SigninSeller(SigninUserRequest) returns (SigninUserResponse) {
    option (google.api.http) = {
      post: "/api/user/seller/signin"
      body: "*"
    };
  }
  rpc GetSeller(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/user/seller/{userId}"
    };
  }
  rpc UpdateSeller(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/api/user/seller/{userId}"
      body: "*"
    };
  }
  rpc DeleteSeller(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/api/user/seller/{userId}"
    };
  }

  // ------------------ Address ------------------ //
  rpc CreateAddress(CreateAddressRequest) returns (CreateAddressResponse) {
    option (google.api.http) = {
      post: "/api/user/address"
      body: "*"
    };
  }
  rpc GetAddress(GetAddressRequest) returns (GetAddressResponse) {
    option (google.api.http) = {
      get: "/api/user/address/{addressId}"
    };
  }
  rpc GetAllAddress(GetAllAddressRequest) returns (GetAllAddressResponse) {
    option (google.api.http) = {
      get: "/api/user/address/all/{userId}"
    };
  }
  rpc UpdateAddress(UpdateAddressRequest) returns (UpdateAddressResponse) {
    option (google.api.http) = {
      put: "/api/user/address/{addressId}"
      body: "*"
    };
  }
  rpc DeleteAddress(DeleteAddressRequest) returns (DeleteAddressResponse) {
    option (google.api.http) = {
      delete: "/api/user/address/{addressId}"
    };
  }

  // ------------------ Card ------------------ //
  rpc CreateCard(CreateCardRequest) returns (CreateCardResponse) {
    option (google.api.http) = {
      post: "/api/user/card"
      body: "*"
    };
  }
  rpc GetCard(GetCardRequest) returns (GetCardResponse) {
    option (google.api.http) = {
      get: "/api/user/card/{cardId}"
    };
  }
  rpc GetAllCard(GetAllCardRequest) returns (GetAllCardResponse) {
    option (google.api.http) = {
      get: "/api/user/card/all/{userId}"
    };
  }
  rpc UpdateCard(UpdateCardRequest) returns (UpdateCardResponse) {
    option (google.api.http) = {
      put: "/api/user/card/{cardId}"
      body: "*"
    };
  }
  rpc DeleteCard(DeleteCardRequest) returns (DeleteCardResponse) {
    option (google.api.http) = {
      delete: "/api/user/card/{cardId}"
    };
  }
}

// Mongodb responses
message CreatedResult {
  string insertedId = 1;
}

message UpdatedResult {
  int64 matchedCount = 1;
  int64 modifiedCount = 2;
  int64 upsertedCount = 3;
}

message DeletedResult {
  int64 deletedCount = 1;
}

// User 
message User {
  string id = 1;
  string name = 2;
  string lastName = 3;
  string birth = 4;
  string email = 5;
  string password = 6;
  string role = 7;
}

message CreateUserRequest {
  User user = 1;
}

message CreateUserResponse {
  CreatedResult result = 1;
}

message SigninUserRequest {
  string email = 1;
  string password = 2;
}

message SigninUserResponse {
  string token = 1;
}

message GetUserRequest {
  string userId = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string userId = 1;
  User user = 2;
}

message UpdateUserResponse {
  UpdatedResult result = 1;
}

message DeleteUserRequest {
  string userId = 1;
}

message DeleteUserResponse {
  DeletedResult result = 1;
}

// Address
message Address {
  string id = 1;
  string userId = 2;
  string name = 3;
  string address = 4;
  int64 postalCode = 5;
  string phone = 6;
  bool default = 7;
}

message CreateAddressRequest {
  Address address = 1;
}

message CreateAddressResponse {
  CreatedResult result = 1;
}

message GetAddressRequest {
  string addressId = 1;
}

message GetAddressResponse {
  Address address = 1;
}

message GetAllAddressRequest {
  string userId = 1;
}

message GetAllAddressResponse {
  repeated Address address = 1;
}

message UpdateAddressRequest {
  string addressId = 1;
  Address address = 2;
}

message UpdateAddressResponse {
  UpdatedResult result = 1;
}

message DeleteAddressRequest {
  string addressId = 1;
}

message DeleteAddressResponse {
  DeletedResult result = 1;
}

// Card
message Card {
  string id = 1;
  string userId = 2;
  string name = 3;
  int64 number = 4;
  string secretCode = 5;
  string expiration = 6;
  string type = 7;
  bool default = 8;
}

message CreateCardRequest {
  Card card = 1;
}

message CreateCardResponse {
  CreatedResult result = 1;
}

message GetCardRequest {
  string cardId = 1;
}

message GetCardResponse {
  Card card = 1;
}

message GetAllCardRequest {
  string userId = 1;
}

message GetAllCardResponse {
  repeated Card card = 1;
}

message UpdateCardRequest {
  string cardId = 1;
  Card card = 2;
}

message UpdateCardResponse {
  UpdatedResult result = 1;
}

message DeleteCardRequest {
  string cardId = 1;
}

message DeleteCardResponse {
  DeletedResult result = 1;
}